##############################################################
#
# these commands run after the application and web server are
# set up and after the application version file is extracted
# but before the application version is deployed
#
# current directory:  /tmp/deployment/application
# copy directory: /var/app/current
#
###############################################################

container_commands:
    01_ssl_protect:
        command: "sh /opt/elasticbeanstalk/ssl-protect.sh &>> /var/log/deploy.log"

    02_password_protect:
        command: "sh /opt/elasticbeanstalk/password-protect.sh &>> /var/log/deploy.log"

    03_make_forever_logs_directory:
        command: ". /opt/elasticbeanstalk/env.vars; mkdir -p /var/log/forever &>> /var/log/deploy.log"

    04_add_users_to_wheel_group:
        command: ". /opt/elasticbeanstalk/env.vars; usermod -a -G wheel nodejs && usermod -a -G wheel ec2-user &>> /var/log/deploy.log"

    05_change_var_ownership:
        command: ". /opt/elasticbeanstalk/env.vars; chmod -R 775 /var/{log,run} && chown -R root:wheel /var/{log,run} &>> /var/log/deploy.log"

    101_install_ember:
        test: '[ ! -f /usr/bin/ember ] && [ ! -f /usr/local/bin/ember ] && echo "ember not installed"'
        command: ". /opt/elasticbeanstalk/env.vars; npm install -g ember-cli &>> /var/log/deploy.log"

    102_install_bower:
        test: '[ ! -f /usr/bin/bower ] && [ ! -f /usr/local/bin/bower ] &&echo "bower not installed"'
        command: ". /opt/elasticbeanstalk/env.vars; npm install -g bower &>> /var/log/deploy.log"

    103_install_broccoli:
        test: '[ ! -f /usr/bin/broccoli ] && [ ! -f /usr/local/bin/broccoli ] && echo "broccoli not installed"'
        command: ". /opt/elasticbeanstalk/env.vars; npm install -g broccoli-cli &>> /var/log/deploy.log"

    104_install_grunt:
        test: '[ ! -f /usr/bin/grunt ] && [ ! -f /usr/local/bin/grunt ] && echo "grunt not installed"'
        command: ". /opt/elasticbeanstalk/env.vars; npm install -g grunt-cli &>> /var/log/deploy.log"

    105_install_gulp:
        test: '[ ! -f /usr/bin/gulp ] && [ ! -f /usr/local/bin/gulp ] && echo "gulp not installed"'
        command: ". /opt/elasticbeanstalk/env.vars; npm install -g gulp &>> /var/log/deploy.log"

    106_install_forever:
        test: '[ ! -f /usr/bin/forever ] && [ ! -f /usr/local/bin/forever ] && echo "forever not installed"'
        command: ". /opt/elasticbeanstalk/env.vars; npm install -g forever &>> /var/log/deploy.log"

    201_upgrade_modules:
        ignoreErrors: true
        command: ". /opt/elasticbeanstalk/env.vars; npm update -g &>> /var/log/deploy.log"

    202_bower_install:
        ignoreErrors: true
        command: ". /opt/elasticbeanstalk/env.vars; bower install --allow-root &>> /var/log/deploy.log"

    301_npm_link:
        ignoreErrors: true
        command: ". /opt/elasticbeanstalk/env.vars; npm run link &>> /var/log/deploy.log"

    302_reload_nginx:
        ignoreErrors: true
        command: ". /opt/elasticbeanstalk/env.vars; nginx -s reload || nginx &>> /var/log/deploy.log"

    303_build_app:
        command: "sh /opt/elasticbeanstalk/build-app.sh &>> /var/log/deploy.log"

##############################################################
#
# these commands run before the application and web server are
# set up and before the application version file is extracted
#
# current directory: /
#
###############################################################

commands:
    00_patch_ebnode_py:
        cwd: /tmp
        ignoreErrors: true
        command: "sed -e '/rebuild/ s/^#*/#/' -i /opt/elasticbeanstalk/containerfiles/ebnode.py  &>> /var/log/deploy.log"

    02_install_git:
        cwd: /tmp
        ignoreErrors: true
        test: '[ ! -f /usr/bin/git ] && echo "git not installed"'
        command: 'yum install -y git --enablerepo=epel &>> /var/log/deploy.log'

    03_install_perl:
        cwd: /tmp
        ignoreErrors: true
        command: "yum install -y perl perl-ExtUtils-Embed pcre pcre-devel patch geoip geoip-data geoip-devel &>> /var/log/deploy.log"

    04_install_ruby:
        cwd: /tmp
        ignoreErrors: true
        command: "yum install -y ruby ruby-rdoc ruby-doc ruby-devel rubygems &>> /var/log/deploy.log"

    05_install_sass:
        cwd: /tmp
        ignoreErrors: true
        command: "/usr/bin/gem install sass --no-user-install &>> /var/log/deploy.log"

    06_link_sass:
        cwd: /tmp
        ignoreErrors: true
        test: '[ ! -f /usr/bin/sass ] && echo "sass not linked"'
        command: "ln -sf /usr/local/bin/sass /usr/bin/sass &>> /var/log/deploy.log"
