##############################################################
#
# files to be used in later commands
#
##############################################################

files:
    "/opt/elasticbeanstalk/ssl-protect.sh":
        mode: "000755"
        owner: root
        group: root
        encoding: plain
        content: |
            #!/bin/bash
            exec >> /var/log/cfn-init.log 2>&1

            cat sslcert/server.crt sslcert/godaddy_bundle_1.crt sslcert/godaddy_bundle_2.crt sslcert/godaddy_bundle_3.crt > sslcert/bundle.crt
            cp -fv sslcert/bundle.crt sslcert/server.crt
            rm -fv sslcert/bundle.crt

    "/opt/elasticbeanstalk/password-protect.sh":
        mode: "000755"
        owner: root
        group: root
        encoding: plain
        content: |
            #!/bin/bash
            exec >> /var/log/cfn-init.log 2>&1

            if [ "$PRODUCTION" = "true" ]; then
                echo "------------------ PRODUCTION ENVIRONMENT - NO PASSWORD SET ----------------"
                echo "" > nginx/common/restricted.conf
            else
                echo "------------------ DEVELOPMENT ENVIRONMENT - PASSWORD SET ------------------"
                rm -rfv security/.htpasswd
                htpasswd -bc security/.htpasswd $HT_USER $HT_PASSWORD
            fi

    "/opt/elasticbeanstalk/docker-cleanup.sh":
        mode: "000755"
        owner: root
        group: root
        encoding: plain
        content: |
            #!/bin/bash
            exec >> /var/log/cfn-init.log 2>&1

            # Find how many inodes in use
            echo "Find how many inodes in use"
            df -i
            echo

            # Find out where most inodes used
            echo "Find out where most inodes used"
            for i in /*; do echo $i; find $i | wc -l; done
            echo

            # Remove container logs
            echo "Remove Container Logs..."
            rm -rf /var/log/containers/*
            rm -rf /var/lib/docker/volumes/*
            rm -rf /var/lib/docker/containers/*
            echo

            # Remove all lingering containers not in use
            echo "Remove Lingering Containers..."
            docker rm -f $(docker ps --no-trunc -aq)
            echo

            # Remove all volumes that are exited
            echo "Remove Exited Volumes..."
            docker rm -v $(docker ps --no-trunc -aqf status=exited)
            echo

            # Remove all intermediary images
            echo "Remove Dangling images..."
            docker rmi -f $(docker images -aqf "dangling=true")
            echo

            # Remove dangling volumes
            echo "Remove Dangling volumes"
            docker volume rm $(docker volume ls -qf dangling=true)
            echo

            # Find how many inodes in use
            echo "Find how many inodes in use"
            df -i
            echo

            # Find out where most inodes used
            echo "Find out where most inodes used"
            for i in /*; do echo $i; find $i | wc -l; done
            echo
